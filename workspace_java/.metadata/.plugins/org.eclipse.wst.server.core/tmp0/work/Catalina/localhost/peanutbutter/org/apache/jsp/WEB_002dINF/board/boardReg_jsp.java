/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-09-08 10:26:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardReg_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    .container {\r\n");
      out.write("        background-color: #F0F0E8;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    body {\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .top {\r\n");
      out.write("        color: #676767;\r\n");
      out.write("        font-size: 24px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        height: 15vh;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .title {\r\n");
      out.write("        padding-top: 30px;\r\n");
      out.write("        margin-left: 100px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .title img {\r\n");
      out.write("        vertical-align: middle;\r\n");
      out.write("        /* 이미지와 텍스트의 높낮이를 맞추기 위해 추가 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .title span {\r\n");
      out.write("        vertical-align: middle;\r\n");
      out.write("        /* 이미지와 텍스트의 높낮이를 맞추기 위해 추가 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .reg_container {\r\n");
      out.write("        margin: 0 100px;\r\n");
      out.write("        height: 70vh;\r\n");
      out.write("        background-color: #E9E4DC;\r\n");
      out.write("        padding: 20px 100px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    span {\r\n");
      out.write("        font-size: 20px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .inputText {\r\n");
      out.write("        margin-left: 20px;\r\n");
      out.write("        font-size: 18px;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        padding-left: 5px;\r\n");
      out.write("        vertical-align: top;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    textarea {\r\n");
      out.write("        width: 90%;\r\n");
      out.write("        height: 60%;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input[type=\"checkbox\"] {\r\n");
      out.write("        transform: scale(1.5);\r\n");
      out.write("        /* 체크박스 크기 크게 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .regBtn {\r\n");
      out.write("        margin: 0 100px;\r\n");
      out.write("        text-align: right;\r\n");
      out.write("        margin-top: 30px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .Btn_css {\r\n");
      out.write("        padding: 15px;\r\n");
      out.write("        background-color: #3F3B3B;\r\n");
      out.write("        color: white;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        display: inline-block;\r\n");
      out.write("        /* 다른 div영역과 겹치지 않게 */\r\n");
      out.write("        border: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .Btn_div {\r\n");
      out.write("        margin-top: 30px;\r\n");
      out.write("        text-align: right;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"top\">\r\n");
      out.write("            <div class=\"title\">\r\n");
      out.write("                <img src=\"/peanutbutter/image/board.png\" style=\"width: 30px;\">\r\n");
      out.write("                <span>게시글 작성</span>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"reg_container\">\r\n");
      out.write("            <form method=\"post\" action=\"reg\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <span style=\"font-size: 17px; color: red;\">공지사항으로 등록</span>\r\n");
      out.write("                    <input type=\"checkbox\" id=\"checkbox\" name=\"notice\" value=\"공지\"><br>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div style=\"margin-top: 10px;\">\r\n");
      out.write("                    <span>제목</span><input class=\"inputText\" type=\"text\" id=\"title\"  name=\"title\" placeholder=\"제목을 입력해주세요\">\r\n");
      out.write("                    <span style=\"margin-left: 30px;\">작성자</span><input class=\"inputText\" type=\"text\" id=\"writer\" name=\"ename\"\r\n");
      out.write("                        value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginDTO.ename}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <br>\r\n");
      out.write("                <div style=\"margin-top: 10px;\">\r\n");
      out.write("                    <span>내용</span><textarea class=\"inputText\" placeholder=\"내용을 입력해주세요\" id=\"content\" name=\"content\"></textarea>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"Btn_div\">\r\n");
      out.write("                    <button type=\"reset\" class=\"Btn_css\">초기화</button>\r\n");
      out.write("                    <input type=\"submit\" value=\"등록\" class=\"Btn_css\">\r\n");
      out.write("<!--                     <button type=\"button\" class=\"Btn_css\" onclick=\"submitForm()\">등록하기</button> -->\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
