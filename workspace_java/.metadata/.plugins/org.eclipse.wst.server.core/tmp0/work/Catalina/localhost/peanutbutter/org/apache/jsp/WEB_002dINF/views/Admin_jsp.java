/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-09-09 01:32:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Admin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("    .container {\r\n");
      out.write("        /* 스크롤 조금 생기는거 없애려고 */\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    body {\r\n");
      out.write("        /* 스크롤 조금 생기는거 없애려고 */\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    .top {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        background-color: #444444;\r\n");
      out.write("        height: 50px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .item {\r\n");
      out.write("        /* border: 1px solid blue; */\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .top2 {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        height: 60px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .top_menu_container {\r\n");
      out.write("        background-color: #C0B296;\r\n");
      out.write("        flex-grow: 5;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: space-between;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .top_menu {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        flex-grow: 1;\r\n");
      out.write("        /* 남은 공간을 나눠가짐 */\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        /* 가로 방향으로 중앙 정렬 */\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        /* 세로 방향으로 중앙 정렬 */\r\n");
      out.write("        color: white;\r\n");
      out.write("        font-size: 20px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .sideBar {\r\n");
      out.write("        background-color: #AF9D8D;\r\n");
      out.write("        flex-grow: 1;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .sideBar_container {\r\n");
      out.write("        background-color: #AF9D8D;\r\n");
      out.write("        width: 18vw;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        height: 100%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .side_menu {\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        height: 30px;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        flex-grow: 1;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        color: #505050;\r\n");
      out.write("        font-size: 16px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .side_menu1,\r\n");
      out.write("    .side_menu2,\r\n");
      out.write("    .side_menu3,\r\n");
      out.write("    .side_menu4 {\r\n");
      out.write("        display: none;\r\n");
      out.write("        /* 기본적으로 숨기기 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .selected {\r\n");
      out.write("        background-color: #784E40;\r\n");
      out.write("        color: white;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .section {\r\n");
      out.write("        width: 100vw;\r\n");
      out.write("        /* border: 1px solid blue; */\r\n");
      out.write("        height: calc(100vh - 110px);\r\n");
      out.write("        display: flex;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .test {\r\n");
      out.write("        display: inline-block;\r\n");
      out.write("        width: 82vw;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    iframe {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        border: none;\r\n");
      out.write("        /* 프레임 테두리 제거 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    img {\r\n");
      out.write("        max-width: 100%;\r\n");
      out.write("        /* 최대 너비를 컨테이너의 너비로 제한 */\r\n");
      out.write("        max-height: 100%;\r\n");
      out.write("        padding-left: 50px;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"header\">\r\n");
      out.write("            <div class=\"top\">\r\n");
      out.write("                <div class=\"item\" style=\"flex-grow: 1\"><img src=\"image/logo.png\"></div>\r\n");
      out.write("                <div class=\"item\" style=\"flex-grow: 4\"></div>\r\n");
      out.write("                <div class=\"item\" style=\"flex-grow: 1;\"><img src=\"image/person.png\"><span\r\n");
      out.write("                        style=\"color: #D5D5D5;font-weight: bold;position: relative;top: -5px;right: -5px;\">관리자 님</span>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"item\" style=\"flex-grow: 1;\"><img src=\"image/offBtn.png\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"top2\">\r\n");
      out.write("                <div style=\"background-color: #AE9476; width: 18vw;;\"></div>\r\n");
      out.write("                <div class=\"top_menu_container\">\r\n");
      out.write("                    <div class=\"top_menu\" data-menu=\"생산\">생산</div>\r\n");
      out.write("                    <div class=\"top_menu\" data-menu=\"재고\">재고</div>\r\n");
      out.write("                    <div class=\"top_menu\" data-menu=\"모니터링\">모니터링</div>\r\n");
      out.write("                    <div class=\"top_menu\" data-menu=\"게시판\">게시판</div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"section\">\r\n");
      out.write("            <div class=\"sideBar_container\">\r\n");
      out.write("                <div class=\"sideBar\">\r\n");
      out.write("                    <div class=\"side_menu side_menu1\" data-page=\"http://127.0.0.1:8080/peanutbutter/pl\">생산계획관리</div>\r\n");
      out.write("                    <div class=\"side_menu side_menu1\" data-page=\"http://127.0.0.1:8080/peanutbutter/pf\">생산실적</div>\r\n");
      out.write("                    <div class=\"side_menu side_menu1\" data-page=\"http://127.0.0.1:8080/peanutbutter/sp\">작업지시서</div>\r\n");
      out.write("                    <div class=\"side_menu side_menu1\" data-page=\"http://127.0.0.1:8080/peanutbutter/BOM\">BOM 관리</div>\r\n");
      out.write("                    <div class=\"side_menu side_menu1\" data-page=\"http://127.0.0.1:8080/peanutbutter/pm\">제품 관리</div>\r\n");
      out.write("                    <div class=\"side_menu side_menu1\" data-page=\"http://127.0.0.1:8080/peanutbutter/pt\">부품 관리</div>\r\n");
      out.write("                    <div class=\"side_menu side_menu1\" data-page=\"http://127.0.0.1:8080/peanutbutter/factory_Management\">공정 관리</div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"side_menu side_menu2\" data-page=\"http://127.0.0.1:8080/peanutbutter/pt_stock\">부품 재고 관리</div>\r\n");
      out.write("                    <div class=\"side_menu side_menu2\" data-page=\"http://127.0.0.1:8080/peanutbutter/pm_stock\">완제품 재고 관리</div>\r\n");
      out.write("                    <div class=\"side_menu side_menu2\" data-page=\"http://127.0.0.1:8080/peanutbutter/Balju\">발주 관리</div>\r\n");
      out.write("                    <div class=\"side_menu side_menu2\" data-page=\"http://127.0.0.1:8080/peanutbutter/In\">입고 관리</div>\r\n");
      out.write("                    <div class=\"side_menu side_menu2\" data-page=\"http://127.0.0.1:8080/peanutbutter/Out\">출고 관리</div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"side_menu side_menu3\" data-page=\"http://127.0.0.1:8080/peanutbutter/Chart\">실적 모니터링</div>\r\n");
      out.write("                    <div class=\"side_menu side_menu3\" data-page=\"http://127.0.0.1:8080/peanutbutter/Chart2\">라인별 현황</div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"side_menu side_menu4\">게시판</div> <!-- 지금은 사용되지 않지만 사이드 메뉴가 2개이상이 되면 사용해야 함 -->\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"test\">\r\n");
      out.write("                <iframe id=\"contentFrame\" src=\"\"></iframe>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    let topMenus = document.querySelectorAll('.top_menu');\r\n");
      out.write("    let sideMenu1s = document.querySelectorAll('.side_menu1');\r\n");
      out.write("    let sideMenu2s = document.querySelectorAll('.side_menu2');\r\n");
      out.write("    let sideMenu3s = document.querySelectorAll('.side_menu3');\r\n");
      out.write("    let sideMenu4s = document.querySelectorAll('.side_menu4');\r\n");
      out.write("\r\n");
      out.write("    topMenus.forEach(menu => {\r\n");
      out.write("        menu.addEventListener('click', () => {\r\n");
      out.write("            let menuType = menu.getAttribute('data-menu');\r\n");
      out.write("\r\n");
      out.write("            sideMenu1s.forEach(item => item.classList.remove('selected'));\r\n");
      out.write("            sideMenu2s.forEach(item => item.classList.remove('selected'));\r\n");
      out.write("            sideMenu3s.forEach(item => item.classList.remove('selected'));\r\n");
      out.write("            sideMenu4s.forEach(item => item.classList.remove('selected'));\r\n");
      out.write("\r\n");
      out.write("            if (menuType === '생산') {\r\n");
      out.write("                let iframe = document.getElementById('contentFrame');\r\n");
      out.write("                iframe.src = 'http://127.0.0.1:8080/peanutbutter/pl';\r\n");
      out.write("                sideMenu1s[0].classList.add('selected'); //사이드바 메뉴의 가장 위에있는 메뉴를 seleted로 설정함\r\n");
      out.write("\r\n");
      out.write("                sideMenu1s.forEach(item => {\r\n");
      out.write("                    item.style.display = 'flex'; // 메뉴들을 다시 보이게 함\r\n");
      out.write("                    item.addEventListener('click', () => {\r\n");
      out.write("                        sideMenu1s.forEach(s => s.classList.remove('selected')); //어떤 사이드메뉴를 클릭하면 모든 사이드메뉴의 selected 클래스를 전부 삭제함\r\n");
      out.write("                        item.classList.add('selected'); // 그리고 클릭한 메뉴에 selected클래스를 추가\r\n");
      out.write("                    });\r\n");
      out.write("                });\r\n");
      out.write("                sideMenu2s.forEach(item => item.style.display = 'none'); //다른 메뉴들은 안보이게 함\r\n");
      out.write("                sideMenu3s.forEach(item => item.style.display = 'none');\r\n");
      out.write("                sideMenu4s.forEach(item => item.style.display = 'none');\r\n");
      out.write("            } else if (menuType === '재고') {\r\n");
      out.write("                let iframe = document.getElementById('contentFrame');\r\n");
      out.write("                iframe.src = 'http://127.0.0.1:8080/peanutbutter/pt_stock';\r\n");
      out.write("                sideMenu2s[0].classList.add('selected');\r\n");
      out.write("\r\n");
      out.write("                sideMenu2s.forEach(item => {\r\n");
      out.write("                    item.style.display = 'flex';\r\n");
      out.write("                    item.addEventListener('click', () => {\r\n");
      out.write("                        sideMenu2s.forEach(s => s.classList.remove('selected'));\r\n");
      out.write("                        item.classList.add('selected');\r\n");
      out.write("                    });\r\n");
      out.write("                });\r\n");
      out.write("                sideMenu1s.forEach(item => item.style.display = 'none');\r\n");
      out.write("                sideMenu3s.forEach(item => item.style.display = 'none');\r\n");
      out.write("                sideMenu4s.forEach(item => item.style.display = 'none');\r\n");
      out.write("            } else if (menuType === '모니터링') {\r\n");
      out.write("                let iframe = document.getElementById('contentFrame');\r\n");
      out.write("                iframe.src = 'http://127.0.0.1:8080/peanutbutter/Chart';\r\n");
      out.write("                sideMenu3s[0].classList.add('selected');\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                sideMenu3s.forEach(item => {\r\n");
      out.write("                    item.style.display = 'flex';\r\n");
      out.write("                    item.addEventListener('click', () => {\r\n");
      out.write("                        sideMenu3s.forEach(s => s.classList.remove('selected'));\r\n");
      out.write("                        item.classList.add('selected');\r\n");
      out.write("                    });\r\n");
      out.write("                });\r\n");
      out.write("                sideMenu1s.forEach(item => item.style.display = 'none');\r\n");
      out.write("                sideMenu2s.forEach(item => item.style.display = 'none');\r\n");
      out.write("                sideMenu4s.forEach(item => item.style.display = 'none');\r\n");
      out.write("            } else if (menuType === '게시판') {\r\n");
      out.write("                let iframe = document.getElementById('contentFrame');\r\n");
      out.write("                iframe.src = 'http://127.0.0.1:8080/peanutbutter/board';\r\n");
      out.write("                // sideMenu4s.forEach(item => {\r\n");
      out.write("                //     item.style.display = 'flex';\r\n");
      out.write("                //     item.addEventListener('click', () => {\r\n");
      out.write("                //         sideMenu4s.forEach(s => s.classList.remove('selected'));\r\n");
      out.write("                //         item.classList.add('selected');\r\n");
      out.write("                //     });\r\n");
      out.write("                // });\r\n");
      out.write("                sideMenu1s.forEach(item => item.style.display = 'none');\r\n");
      out.write("                sideMenu2s.forEach(item => item.style.display = 'none');\r\n");
      out.write("                sideMenu3s.forEach(item => item.style.display = 'none');\r\n");
      out.write("            }\r\n");
      out.write("            else {\r\n");
      out.write("                sideMenu1s.forEach(item => item.style.display = 'none');\r\n");
      out.write("                sideMenu2s.forEach(item => item.style.display = 'none');\r\n");
      out.write("                sideMenu3s.forEach(item => item.style.display = 'none');\r\n");
      out.write("                sideMenu4s.forEach(item => item.style.display = 'none');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    let sideMenus = document.querySelectorAll('.side_menu');\r\n");
      out.write("\r\n");
      out.write("    // 각 side_menu에 클릭 이벤트 리스너 추가\r\n");
      out.write("    sideMenus.forEach(menu => {\r\n");
      out.write("        menu.addEventListener('click', (event) => {\r\n");
      out.write("            // 클릭된 메뉴 요소의 data-page 속성 값 가져오기\r\n");
      out.write("            let page = event.target.getAttribute('data-page');\r\n");
      out.write("            // iframe 요소 선택\r\n");
      out.write("            let iframe = document.getElementById('contentFrame');\r\n");
      out.write("            // iframe의 src 속성 변경\r\n");
      out.write("            iframe.src = page;\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    window.onload = function () {\r\n");
      out.write("        let iframe = document.getElementById('contentFrame');\r\n");
      out.write("        iframe.src = \"http://127.0.0.1:8080/peanutbutter/Chart\";\r\n");
      out.write("        sideMenu3s[0].classList.add('selected');\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        sideMenu3s.forEach(item => {\r\n");
      out.write("            item.style.display = 'flex';\r\n");
      out.write("            item.addEventListener('click', () => {\r\n");
      out.write("                sideMenu3s.forEach(s => s.classList.remove('selected'));\r\n");
      out.write("                item.classList.add('selected');\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        sideMenu1s.forEach(item => item.style.display = 'none');\r\n");
      out.write("        sideMenu2s.forEach(item => item.style.display = 'none');\r\n");
      out.write("        sideMenu4s.forEach(item => item.style.display = 'none');\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
