/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-09-08 09:11:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Map;
import java.util.Set;
import java.util.Map.Entry;
import java.util.List;
import java.sql.*;
import java.net.URLEncoder;

public final class BOM_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("java.util.Map.Entry");
    _jspx_imports_classes.add("java.util.Set");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("	background-color: #F0F0E8;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".top {\r\n");
      out.write("	color: #676767;\r\n");
      out.write("	font-size: 24px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	height: 15vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title {\r\n");
      out.write("	padding-top: 30px;\r\n");
      out.write("	margin-left: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title img {\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title span {\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search_container {\r\n");
      out.write("	margin: 0 100px;\r\n");
      out.write("	height: 10vh;\r\n");
      out.write("	background-color: #E9E4DC;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search_input {\r\n");
      out.write("	height: 40px;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	padding: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".select {\r\n");
      out.write("	margin-right: 20px;\r\n");
      out.write("	height: 40px;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search_item {\r\n");
      out.write("	margin: 10px 100px;\r\n");
      out.write("	height: 60vh;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	overflow-y: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("	border-collapse: collapse;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	background-color: #848484;\r\n");
      out.write("	color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".tbody td {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	padding: 5px;\r\n");
      out.write("	border-bottom: 1px solid rgb(218, 218, 218);\r\n");
      out.write("	padding: 10px 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".thead th {\r\n");
      out.write("	border-left: 1px solid white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".thead th:nth-child(1) {\r\n");
      out.write("	width: 5%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".thead th:nth-child(2) {\r\n");
      out.write("	width: 25%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".thead th:nth-child(3) {\r\n");
      out.write("	width: 25%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".thead th:nth-child(4) {\r\n");
      out.write("	width: 25%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".thead th:nth-child(5) {\r\n");
      out.write("	width: 10%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".regBtn_div {\r\n");
      out.write("	margin: 0 100px;\r\n");
      out.write("	text-align: right;\r\n");
      out.write("	margin-top: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".Btn_css {\r\n");
      out.write("	padding: 15px;\r\n");
      out.write("	background-color: #3F3B3B;\r\n");
      out.write("	color: white;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"top\">\r\n");
      out.write("			<div class=\"title\">\r\n");
      out.write("				<img src=\"image/BOM.png\" style=\"width: 30px;\"> <span>BOM</span>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"search_container\">\r\n");
      out.write("			<select class=\"select\">\r\n");
      out.write("				<option>-----</option>\r\n");
      out.write("				<option>제품코드</option>\r\n");
      out.write("				<option>제품명</option>\r\n");
      out.write("			</select> <input class=\"search_input\" type=\"text\" placeholder=\"검색어를 입력해주세요\">\r\n");
      out.write("			<img style=\"margin-left: 30px; margin-right: 30px;\"\r\n");
      out.write("				src=\"image/search.png\" onclick=\"searchTable()\">\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"search_item\">\r\n");
      out.write("			<table class=\"table\">\r\n");
      out.write("				<thead class=\"thead\">\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th></th>\r\n");
      out.write("						<th>제품코드</th>\r\n");
      out.write("						<th>제품명</th>\r\n");
      out.write("						<th></th>\r\n");
      out.write("						<th></th>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</thead>\r\n");
      out.write("				<tbody class=\"tbody\">\r\n");
      out.write("					");

					String url = "jdbc:oracle:thin:@125.181.132.133:51521:xe";
					String username = "scott2_9";
					String password = "tiger";
					Connection conn = null;
					Statement stmt = null;
					ResultSet rs = null;

					try {
						Class.forName("oracle.jdbc.driver.OracleDriver");
						conn = DriverManager.getConnection(url, username, password);
						String query = "SELECT product_name, product_code FROM TABLE_PM ORDER BY product_code ASC";

						stmt = conn.createStatement();
						rs = stmt.executeQuery(query);

						while (rs.next()) {
							String productname = rs.getString("product_name");
							String productcode = rs.getString("product_code");
					
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td><input type=\"checkbox\" class=\"delete-checkbox\"></td>\r\n");
      out.write("						<td data-product-code=\"");
      out.print(productcode);
      out.write('"');
      out.write('>');
      out.print(productcode);
      out.write("</td>\r\n");
      out.write("						<td><a href=\"BOMDetail?productName=");
      out.print( URLEncoder.encode(productname, "UTF-8") );
      out.write('"');
      out.write('>');
      out.print( productname );
      out.write("</a></td>\r\n");
      out.write("						<td></td>\r\n");
      out.write("						<td></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");

					}
				} catch (Exception e) {
						e.printStackTrace();
				} finally {
				try {
					if (rs != null)
						rs.close();
					if (stmt != null)
						stmt.close();
					if (conn != null)
						conn.close();
						} catch (SQLException e) {
						e.printStackTrace();
					}
				}
					
      out.write("\r\n");
      out.write("				</tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"regBtn_div\">\r\n");
      out.write("			<span class=\"Btn_css\" onclick=\"deleteSelectedRows()\">선택된 행 삭제</span>\r\n");
      out.write("			<span class=\"Btn_css\" id=\"regBtn\" onclick=\"regBOM()\">BOM 등록</span>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    function searchTable() {\r\n");
      out.write("        let selectValue = document.querySelector('.select').value;\r\n");
      out.write("        let input = document.querySelector('.search_input').value;\r\n");
      out.write("        let table = document.querySelector('.table');\r\n");
      out.write("        let rows = table.querySelectorAll('.tbody tr');\r\n");
      out.write("        if (selectValue === '제품코드') {\r\n");
      out.write("            rows.forEach(row => {\r\n");
      out.write("                let code = row.querySelector('td:nth-child(2)');\r\n");
      out.write("                if (code) {\r\n");
      out.write("                    let codeText = code.innerText;\r\n");
      out.write("                    if (codeText.includes(input)) {\r\n");
      out.write("                        row.style.display = '';\r\n");
      out.write("                    } else {\r\n");
      out.write("                        row.style.display = 'none';\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        } else if (selectValue === '제품명') {\r\n");
      out.write("            rows.forEach(row => {\r\n");
      out.write("                let name = row.querySelector('td:nth-child(3)');\r\n");
      out.write("                if (name) {\r\n");
      out.write("                    let nameText = name.innerText;\r\n");
      out.write("                    if (nameText.includes(input)) {\r\n");
      out.write("                        row.style.display = '';\r\n");
      out.write("                    } else {\r\n");
      out.write("                        row.style.display = 'none';\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        } else if (selectValue === '-----') {\r\n");
      out.write("            rows.forEach(row => {\r\n");
      out.write("                row.style.display = '';\r\n");
      out.write("            })\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    function deleteSelectedRows() {\r\n");
      out.write("        let checkedBoxes = document.querySelectorAll('.delete-checkbox:checked');\r\n");
      out.write("\r\n");
      out.write("        if (checkedBoxes.length > 0) {\r\n");
      out.write("            let form = document.createElement('form');\r\n");
      out.write("            form.method = 'POST';\r\n");
      out.write("            form.action = 'BOMDeleteServlet';\r\n");
      out.write("\r\n");
      out.write("            checkedBoxes.forEach(box => {\r\n");
      out.write("                let row = box.closest('tr');\r\n");
      out.write("                let productCodeElement = row.querySelector('td[data-product-code]');\r\n");
      out.write("                let productCode = productCodeElement ? productCodeElement.dataset.productCode : null;\r\n");
      out.write("				\r\n");
      out.write("                let input = document.createElement('input');\r\n");
      out.write("                input.type = 'hidden';\r\n");
      out.write("                input.name = 'productcode'; \r\n");
      out.write("                input.value = productCode;\r\n");
      out.write("                form.appendChild(input);\r\n");
      out.write("\r\n");
      out.write("            });\r\n");
      out.write("            document.body.appendChild(form);\r\n");
      out.write("            form.submit();\r\n");
      out.write("\r\n");
      out.write("            checkedBoxes.forEach(box => {\r\n");
      out.write("                let row = box.closest('tr');\r\n");
      out.write("                row.remove(); \r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("        } else {\r\n");
      out.write("            alert('삭제할 항목을 선택하세요.');\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    function regBOM() {\r\n");
      out.write("        window.location.href = \"BOMReg\";\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    window.onload = function () {\r\n");
      out.write("        let tbody = document.querySelector('.tbody');\r\n");
      out.write("        let BOM_items = JSON.parse(sessionStorage.getItem('BOM_items')) || [];\r\n");
      out.write("        let newRow = document.createElement('tr');\r\n");
      out.write("\r\n");
      out.write("        BOM_items.forEach(item => {\r\n");
      out.write("            if (item.code && item.name) {\r\n");
      out.write("                let newRow = document.createElement('tr');\r\n");
      out.write("                newRow.innerHTML = `\r\n");
      out.write("                                    <td><input type=\"checkbox\" class=\"delete-checkbox\"></td> \r\n");
      out.write("                                    <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.code}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                                    <td><a href=\"asd.html\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<a></td>\r\n");
      out.write("                                    <td>비고사항 없음</td>\r\n");
      out.write("                                    <td>\r\n");
      out.write("                                        <select>\r\n");
      out.write("                                            <option>Y</option>\r\n");
      out.write("                                            <option>N</option>\r\n");
      out.write("                                        </select>\r\n");
      out.write("                                    </td>\r\n");
      out.write("                                    `;\r\n");
      out.write("\r\n");
      out.write("                tbody.appendChild(newRow);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
