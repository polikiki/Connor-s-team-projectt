package chap05;

public class ArrayCopyExam {

	public static void main(String[] args) {
		
		String[] coffee = new String[3];
//		coffee[0] = "아아";
		coffee[0] = "따아";
		coffee[1] = "라떼";
		coffee[2] = "말차";
		
		// 커피 2호점에서 1호점과 똑같은 커피를 판매할껍니다
		/*
		 *  얕은 복사 shallow copy, think copy, call by reference
		 *  stack영역의 값(주소)만 복사
		 *  원본이 바뀌면 당연히도 내 값도 바뀝니다  
		 */
		String[] coffee2 = coffee;
		for(int i=0; i<coffee2.length; i++) {
			System.out.println(coffee2[i]);
		}
		
		// 얕은 복사로 연결되어 있어서 
		// 내껄 바꿔도 원본이 바뀐다
		// 원본의 주소를 공유하고 있기 때문에 coffee나 coffe2는 같은거다 
		coffee2[1] = "연유라떼";
		System.out.println("coffee2[1]의 값을 바꾸고 원본인 coffee를 출력");
		for(int i=0; i<coffee2.length; i++) {
			System.out.println(coffee[i]);
		}
		// 크기와 내용을 동일하게 가지는 새로운 배열을 만들겠다
		String[] coffee3 = new String[coffee.length];
//		coffee3[0] ="따아"; // 수동이니까 원본이 바뀌면 이것도 바꿔줘야 하니까 
//		coffee3[0] = coffee[0];
		for(int i=0; i<coffee3.length; i++ ) {
			coffee3[i] = coffee[i];
		}
		
		System.out.println("coffe3 출력");
		coffee3[2] = "아샷추";
		for(int i=0; i<coffee3.length; i++ ) {
			System.out.println(coffee3[i]);
		}
		System.out.println("coffee3[2]의 값을 바꾸고 원본인 coffee를 출력");
		for(int i=0; i<coffee.length; i++) {
			System.out.println(coffee[i]);
		}
		
	}

}
